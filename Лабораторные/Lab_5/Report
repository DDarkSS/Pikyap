
# Отчет по лаборатоной работе №1
Основные конструкции языка Python.
Цель лабораторной работы: изучение основных конструкций языка Python.
Задание:
Разработать программу для решения биквадратного уравнения.
1. Программа должна быть разработана в виде консольного приложения
на языке Python.
2. Программа осуществляет ввод с клавиатуры коэффициентов А, В, С,
вычисляет дискриминант и ДЕЙСТВИТЕЛЬНЫЕ корни уравнения (в
зависимости от дискриминанта).
3. Коэффициенты А, В, С могут быть заданы в виде параметров
командной строки ( вариант задания параметров приведен в конце
файла с примером кода ). Если они не заданы, то вводятся с
клавиатуры в соответствии с пунктом 2. Описание работы с
параметрами командной строки.
4. Если коэффициент А, В, С введен или задан в командной строке
некорректно, то необходимо проигнорировать некорректное значение
и вводить коэффициент повторно пока коэффициент не будет введен
корректно. Корректно заданный коэффициент - это коэффициент,
значение которого может быть без ошибок преобразовано в
действительное число.
Текст программы
import sys
import math
class SquareRoots:
 def __init__(self):
 '''
 Конструктор класса
 '''
 # Объявление коэффициентов
 self.coef_A = 0.0
 self.coef_B = 0.0
 self.coef_C = 0.0
 # Список корней
 self.roots_list = set()
 def get_coef(self, index, prompt):
 '''
 Читаем коэффициент из командной строки или вводим с клавиатуры
 Args:
 index (int): Номер параметра в командной строке
 prompt (str): Приглашение для ввода коэффицента
 Returns:
 float: Коэффициент квадратного уравнения
 '''
 try:
 # Пробуем прочитать коэффициент из командной строки
 coef_str = sys.argv[index]
 except:
 # Вводим с клавиатуры
 print(prompt)
 coef_str = input()
 # Переводим строку в действительное число
 coef = float(coef_str)
 return coef
 def get_coefs(self):
 '''
 Чтение трех коэффициентов
 '''
 self.coef_A = self.get_coef(1, 'Введите коэффициент А:')
 self.coef_B = self.get_coef(2, 'Введите коэффициент B:')
 self.coef_C = self.get_coef(3, 'Введите коэффициент C:')
 def calculate_roots(self):
 a=self.coef_A
 b=self.coef_B
 c=self.coef_C
 D=b*b-4*a*c
 if D>=0:
 x1=(-b-math.sqrt(D))/(2*a)
 x2=(-b+math.sqrt(D))/(2*a)
 if(x1>=0):
 self.roots_list.add(math.sqrt(x1))
 self.roots_list.add(-math.sqrt(x1))
 if (x2 >= 0):
 self.roots_list.add(math.sqrt(x2))
 self.roots_list.add(-math.sqrt(x2))
 def print_roots(self):
 if(len(self.roots_list)==0):
 print("Корней нет")
 elif(len(self.roots_list)==1):
 print("Один корень", self.roots_list)
 elif (len(self.roots_list) == 2):
 print("Два корня", self.roots_list)
 elif (len(self.roots_list) == 3):
 print("Три корня", self.roots_list)
 elif (len(self.roots_list) == 4):
 print("Четыре корня", self.roots_list)
def main():
 '''
 Основная функция
 '''
 # Создание объекта класса
 r = SquareRoots()
 # Последовательный вызов необходимых методов
 r.get_coefs()
 r.calculate_roots()
 r.print_roots()
# Если сценарий запущен из командной строки
if __name__ == "__main__":
 main()
Примеры выполнения программы
Вывод
Я изучил основные конструкции языка Python.
